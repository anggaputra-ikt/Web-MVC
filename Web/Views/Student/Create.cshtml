@model Web.ViewModels.StudentViewModel
@{
    ViewBag.Title = "Create";
    var formLabel = new Web.Models.HtmlAttribute();
    formLabel.Class = "form-label";

    var formControl = new Dictionary<string, object>();
    formControl.Add("class", "form-control");

    var formSelect = new Web.Models.HtmlAttribute();
    formSelect.Class = "form-select";
}
<h2>Create</h2>
@using (@Html.BeginForm("CreatePost", "Student", FormMethod.Post))
{
    <div class="mb-3">
        @Html.LabelFor(model => model.FullName, formLabel)
        @Html.TextBoxFor(model => model.FullName, formControl)
        @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
    </div>
    <div class="mb-3">
        @Html.LabelFor(model => model.Sex, new { Class = "form-label" })
        @Html.DropDownListFor(model => model.Sex, new SelectList(Enum.GetValues(typeof(Web.Models.Sex))), "- Select Gender -", formSelect)
    </div>
    <div class="mb-3">
        @Html.LabelFor(model => model.Age, new { @class = "form-label" })
        @Html.TextBoxFor(model => model.Age, new { @type = "number", @class = "form-control" })
    </div>
    <div class="mb-3">
        @Html.LabelFor(model => model.BirthDate, new { @class = "form-label" })
        @Html.TextBoxFor(model => model.BirthDate, new { type = "date", @class = "form-control" })
    </div>
    <div class="mb-3">
        @Html.LabelFor(model => model.BirthPlace, new { @class = "form-label" })
        @Html.TextBoxFor(model => model.BirthPlace, new { @class = "form-control" })
    </div>
    <button class="btn btn-secondary">Submit</button>
}
